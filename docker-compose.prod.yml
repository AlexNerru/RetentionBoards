version: '3.7'

services:
  web:
    build: retentionboards_core/app
    command: gunicorn retentionboards_core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - env.prod.web
    depends_on:
      - db

  retentioneering:
    build: retentionboards_retentioneering/app
    command: gunicorn retentionboards_retentioneering.wsgi:application --bind 0.0.0.0:8001
    volumes:
      - retentioneering:/usr/src/app/
    env_file:
      - env.prod.services
    depends_on:
      - db
      - redis_queue
      - redis_cache
      - web
    deploy:
      replicas: 4

    db:
      image: postgres:12.0-alpine
      volumes:
        - postgres_data:/var/lib/postgresql/data/
      env_file:
        - env.prod.db

    redis_queue:
      image: redis:latest
      volumes:
        - redis_queue_data:/data

    celery:
      build: retentionboards_core/app
      command: sh -c "celery -A retentionboards_core worker -l info"
      volumes:
        - celery_data:/code
      env_file:
        - env.prod.services
      depends_on:
        - db
        - redis_queue
        - web

    celery_beat:
      build: retentionboards_core/app
      command: sh -c "celery -A retentionboards_core beat -l debug"
      volumes:
        - celery_beat:/code
      env_file:
        - env.prod.services
      depends_on:
        - db
        - redis_queue
        - web

    celery_retentioneering:
      build: retentionboards_retentioneering/app
      command: sh -c "celery -A retentionboards_retentioneering worker -l info --concurrency=10"
      volumes:
        - celery_rete:/code
      env_file:
        - env.prod.web
      depends_on:
        - db
        - redis_queue
        - retentioneering
        - web

    flower:
      image: mher/flower
      command: ["flower", "--broker=redis://redis_queue:6379/0", "--port=8888"]
      ports:
        - 8888:8888
      depends_on:
        - celery
        - celery_beat
        - celery_retentioneering
        - redis_queue

    redis_cache:
      image: redis:latest
      volumes:
        - redis_cache_data:/data

  volumes:
    postgres_data:
    redis_queue_data:
    redis_cache_data:
    celery_data:
    app:
    retentioneering:
    celery_beat:
    celery_rete: