version: '3.7'

services:
  web:
    build: retentionboards_core/app
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - app:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - env.dev.web
    depends_on:
      - db
      - redis_queue
      - redis_cache

  retentioneering:
    build: retentionboards_retentioneering/app
    command: sh -c "python manage.py runserver 0.0.0.0:8001"
    volumes:
      - retentioneering:/usr/src/app/
    env_file:
      - env.dev.services
    depends_on:
      - db
      - redis_queue
      - redis_cache
      - web
    deploy:
      replicas: 4

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - env.dev.db
    ports:
      - 5432:5432

  redis_queue:
    image: redis:latest
    volumes:
      - redis_queue_data:/data

  celery:
    build: retentionboards_core/app
    command: sh -c "celery -A retentionboards_core worker -l info"
    volumes:
      - celery_data:/code
    env_file:
      - env.dev.services
    depends_on:
      - db
      - redis_queue
      - web

  celery_beat:
    build: retentionboards_core/app
    command: sh -c "celery -A retentionboards_core beat -l debug"
    volumes:
      - celery_beat:/code
    env_file:
      - env.dev.services
    depends_on:
      - db
      - redis_queue
      - web

  celery_retentioneering:
    build: retentionboards_retentioneering/app
    command: sh -c "celery -A retentionboards_retentioneering worker -l info --concurrency=10"
    volumes:
      - celery_rete:/code
    env_file:
      - env.dev.web
    depends_on:
      - db
      - redis_queue
      - retentioneering
      - web

  flower:
    image: mher/flower
    command: ["flower", "--broker=redis://redis_queue:6379/0", "--port=8888"]
    ports:
      - 8888:8888
    depends_on:
      - celery
      - celery_beat
      - celery_retentioneering
      - redis_queue

  redis_cache:
    image: redis:latest
    volumes:
      - redis_cache_data:/data

volumes:
  postgres_data:
  redis_queue_data:
  redis_cache_data:
  celery_data:
  app:
  retentioneering:
  celery_beat:
  celery_rete: