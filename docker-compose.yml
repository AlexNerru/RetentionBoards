version: '3.7'

services:
  web:
    build: retentionboards_core/app
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - app:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis_queue
      - redis_cache
      - retentioneering

  retentioneering:
    build: retentionboards_retentioneering/app
    command: sh -c "python manage.py runserver 0.0.0.0:8002"
    volumes:
      - retentioneering:/usr/src/app/
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis_queue
      - redis_cache

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev

  redis_queue:
    image: redis:latest
    volumes:
      - redis_queue_data:/data

  celery:
    build: retentionboards_core/app
    command: sh -c "celery -A retentionboards_core worker -l info"
    volumes:
      - celery_data:/code
    depends_on:
      - db
      - redis_queue
      - web
      - retentioneering

  celery_retentioneering:
    build: retentionboards_retentioneering/app
    command: sh -c "celery -A retentionboards_retentioneering worker -l info"
    volumes:
      - celery_data:/code
    depends_on:
      - db
      - redis_queue
      - web
      - retentioneering

  flower:
    image: mher/flower
    command: ["flower", "--broker=redis://redis_queue:6379/0", "--port=8888"]
    ports:
      - 8888:8888
    depends_on:
      - celery
      - redis_queue

  redis_cache:
    image: redis:latest
    volumes:
      - redis_cache_data:/data

volumes:
  postgres_data:
  redis_queue_data:
  redis_cache_data:
  celery_data:
  app:
  retentioneering: